
LCD2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000002a0  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000010  00800060  000002a0  00000314  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  00000324  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000354  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000088  00000000  00000000  00000390  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000097d  00000000  00000000  00000418  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000649  00000000  00000000  00000d95  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000005ea  00000000  00000000  000013de  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000110  00000000  00000000  000019c8  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000036c  00000000  00000000  00001ad8  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000018d  00000000  00000000  00001e44  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000078  00000000  00000000  00001fd1  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e0 ea       	ldi	r30, 0xA0	; 160
  68:	f2 e0       	ldi	r31, 0x02	; 2
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a0 37       	cpi	r26, 0x70	; 112
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>
  76:	0e 94 28 01 	call	0x250	; 0x250 <main>
  7a:	0c 94 4e 01 	jmp	0x29c	; 0x29c <_exit>

0000007e <__bad_interrupt>:
  7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <i2c_init>:
}

void lcd_lef_sh()
{
	lcd_cmd(0x18);      //----Command for Left Shift
	delay(200);
  82:	82 e6       	ldi	r24, 0x62	; 98
  84:	80 b9       	out	0x00, r24	; 0
  86:	84 e0       	ldi	r24, 0x04	; 4
  88:	86 bf       	out	0x36, r24	; 54
  8a:	11 b8       	out	0x01, r1	; 1
  8c:	08 95       	ret

0000008e <i2c_start>:
  8e:	84 ea       	ldi	r24, 0xA4	; 164
  90:	86 bf       	out	0x36, r24	; 54
  92:	06 b6       	in	r0, 0x36	; 54
  94:	07 fe       	sbrs	r0, 7
  96:	fd cf       	rjmp	.-6      	; 0x92 <i2c_start+0x4>
  98:	08 95       	ret

0000009a <i2c_write>:
  9a:	83 b9       	out	0x03, r24	; 3
  9c:	84 e8       	ldi	r24, 0x84	; 132
  9e:	86 bf       	out	0x36, r24	; 54
  a0:	06 b6       	in	r0, 0x36	; 54
  a2:	07 fe       	sbrs	r0, 7
  a4:	fd cf       	rjmp	.-6      	; 0xa0 <i2c_write+0x6>
  a6:	08 95       	ret

000000a8 <delay>:
  a8:	40 e0       	ldi	r20, 0x00	; 0
  aa:	50 e0       	ldi	r21, 0x00	; 0
  ac:	0a c0       	rjmp	.+20     	; 0xc2 <delay+0x1a>
  ae:	2f 5f       	subi	r18, 0xFF	; 255
  b0:	3f 4f       	sbci	r19, 0xFF	; 255
  b2:	02 c0       	rjmp	.+4      	; 0xb8 <delay+0x10>
  b4:	20 e0       	ldi	r18, 0x00	; 0
  b6:	30 e0       	ldi	r19, 0x00	; 0
  b8:	29 37       	cpi	r18, 0x79	; 121
  ba:	31 05       	cpc	r19, r1
  bc:	c4 f3       	brlt	.-16     	; 0xae <delay+0x6>
  be:	4f 5f       	subi	r20, 0xFF	; 255
  c0:	5f 4f       	sbci	r21, 0xFF	; 255
  c2:	84 17       	cp	r24, r20
  c4:	95 07       	cpc	r25, r21
  c6:	b4 f7       	brge	.-20     	; 0xb4 <delay+0xc>
  c8:	08 95       	ret

000000ca <toggle>:
  ca:	83 b1       	in	r24, 0x03	; 3
  cc:	82 60       	ori	r24, 0x02	; 2
  ce:	83 b9       	out	0x03, r24	; 3
  d0:	84 e8       	ldi	r24, 0x84	; 132
  d2:	86 bf       	out	0x36, r24	; 54
  d4:	06 b6       	in	r0, 0x36	; 54
  d6:	07 fe       	sbrs	r0, 7
  d8:	fd cf       	rjmp	.-6      	; 0xd4 <toggle+0xa>
  da:	81 e0       	ldi	r24, 0x01	; 1
  dc:	90 e0       	ldi	r25, 0x00	; 0
  de:	0e 94 54 00 	call	0xa8	; 0xa8 <delay>
  e2:	83 b1       	in	r24, 0x03	; 3
  e4:	8d 7f       	andi	r24, 0xFD	; 253
  e6:	83 b9       	out	0x03, r24	; 3
  e8:	84 e8       	ldi	r24, 0x84	; 132
  ea:	86 bf       	out	0x36, r24	; 54
  ec:	06 b6       	in	r0, 0x36	; 54
  ee:	07 fe       	sbrs	r0, 7
  f0:	fd cf       	rjmp	.-6      	; 0xec <toggle+0x22>
  f2:	08 95       	ret

000000f4 <lcd_cmd_hf>:
  f4:	93 b1       	in	r25, 0x03	; 3
  f6:	9e 7f       	andi	r25, 0xFE	; 254
  f8:	93 b9       	out	0x03, r25	; 3
  fa:	94 e8       	ldi	r25, 0x84	; 132
  fc:	96 bf       	out	0x36, r25	; 54
  fe:	06 b6       	in	r0, 0x36	; 54
 100:	07 fe       	sbrs	r0, 7
 102:	fd cf       	rjmp	.-6      	; 0xfe <lcd_cmd_hf+0xa>
 104:	93 b1       	in	r25, 0x03	; 3
 106:	9f 70       	andi	r25, 0x0F	; 15
 108:	93 b9       	out	0x03, r25	; 3
 10a:	94 e8       	ldi	r25, 0x84	; 132
 10c:	96 bf       	out	0x36, r25	; 54
 10e:	06 b6       	in	r0, 0x36	; 54
 110:	07 fe       	sbrs	r0, 7
 112:	fd cf       	rjmp	.-6      	; 0x10e <lcd_cmd_hf+0x1a>
 114:	93 b1       	in	r25, 0x03	; 3
 116:	80 7f       	andi	r24, 0xF0	; 240
 118:	89 2b       	or	r24, r25
 11a:	83 b9       	out	0x03, r24	; 3
 11c:	84 e8       	ldi	r24, 0x84	; 132
 11e:	86 bf       	out	0x36, r24	; 54
 120:	06 b6       	in	r0, 0x36	; 54
 122:	07 fe       	sbrs	r0, 7
 124:	fd cf       	rjmp	.-6      	; 0x120 <lcd_cmd_hf+0x2c>
 126:	0e 94 65 00 	call	0xca	; 0xca <toggle>
 12a:	08 95       	ret

0000012c <lcd_cmd>:
 12c:	cf 93       	push	r28
 12e:	c8 2f       	mov	r28, r24
 130:	83 b1       	in	r24, 0x03	; 3
 132:	8e 7f       	andi	r24, 0xFE	; 254
 134:	83 b9       	out	0x03, r24	; 3
 136:	84 e8       	ldi	r24, 0x84	; 132
 138:	86 bf       	out	0x36, r24	; 54
 13a:	06 b6       	in	r0, 0x36	; 54
 13c:	07 fe       	sbrs	r0, 7
 13e:	fd cf       	rjmp	.-6      	; 0x13a <lcd_cmd+0xe>
 140:	83 b1       	in	r24, 0x03	; 3
 142:	8f 70       	andi	r24, 0x0F	; 15
 144:	83 b9       	out	0x03, r24	; 3
 146:	84 e8       	ldi	r24, 0x84	; 132
 148:	86 bf       	out	0x36, r24	; 54
 14a:	06 b6       	in	r0, 0x36	; 54
 14c:	07 fe       	sbrs	r0, 7
 14e:	fd cf       	rjmp	.-6      	; 0x14a <lcd_cmd+0x1e>
 150:	83 b1       	in	r24, 0x03	; 3
 152:	9c 2f       	mov	r25, r28
 154:	90 7f       	andi	r25, 0xF0	; 240
 156:	89 2b       	or	r24, r25
 158:	83 b9       	out	0x03, r24	; 3
 15a:	84 e8       	ldi	r24, 0x84	; 132
 15c:	86 bf       	out	0x36, r24	; 54
 15e:	06 b6       	in	r0, 0x36	; 54
 160:	07 fe       	sbrs	r0, 7
 162:	fd cf       	rjmp	.-6      	; 0x15e <lcd_cmd+0x32>
 164:	0e 94 65 00 	call	0xca	; 0xca <toggle>
 168:	83 b1       	in	r24, 0x03	; 3
 16a:	8f 70       	andi	r24, 0x0F	; 15
 16c:	83 b9       	out	0x03, r24	; 3
 16e:	84 e8       	ldi	r24, 0x84	; 132
 170:	86 bf       	out	0x36, r24	; 54
 172:	06 b6       	in	r0, 0x36	; 54
 174:	07 fe       	sbrs	r0, 7
 176:	fd cf       	rjmp	.-6      	; 0x172 <lcd_cmd+0x46>
 178:	23 b1       	in	r18, 0x03	; 3
 17a:	30 e1       	ldi	r19, 0x10	; 16
 17c:	c3 9f       	mul	r28, r19
 17e:	c0 01       	movw	r24, r0
 180:	11 24       	eor	r1, r1
 182:	82 2b       	or	r24, r18
 184:	83 b9       	out	0x03, r24	; 3
 186:	84 e8       	ldi	r24, 0x84	; 132
 188:	86 bf       	out	0x36, r24	; 54
 18a:	06 b6       	in	r0, 0x36	; 54
 18c:	07 fe       	sbrs	r0, 7
 18e:	fd cf       	rjmp	.-6      	; 0x18a <lcd_cmd+0x5e>
 190:	0e 94 65 00 	call	0xca	; 0xca <toggle>
 194:	cf 91       	pop	r28
 196:	08 95       	ret

00000198 <lcd_init>:
 198:	80 e3       	ldi	r24, 0x30	; 48
 19a:	0e 94 7a 00 	call	0xf4	; 0xf4 <lcd_cmd_hf>
 19e:	80 e3       	ldi	r24, 0x30	; 48
 1a0:	0e 94 7a 00 	call	0xf4	; 0xf4 <lcd_cmd_hf>
 1a4:	80 e2       	ldi	r24, 0x20	; 32
 1a6:	0e 94 7a 00 	call	0xf4	; 0xf4 <lcd_cmd_hf>
 1aa:	88 e2       	ldi	r24, 0x28	; 40
 1ac:	0e 94 96 00 	call	0x12c	; 0x12c <lcd_cmd>
 1b0:	8c e0       	ldi	r24, 0x0C	; 12
 1b2:	0e 94 96 00 	call	0x12c	; 0x12c <lcd_cmd>
 1b6:	81 e0       	ldi	r24, 0x01	; 1
 1b8:	0e 94 96 00 	call	0x12c	; 0x12c <lcd_cmd>
 1bc:	86 e0       	ldi	r24, 0x06	; 6
 1be:	0e 94 96 00 	call	0x12c	; 0x12c <lcd_cmd>
 1c2:	80 e8       	ldi	r24, 0x80	; 128
 1c4:	0e 94 96 00 	call	0x12c	; 0x12c <lcd_cmd>
 1c8:	08 95       	ret

000001ca <lcd_dwr>:
 1ca:	cf 93       	push	r28
 1cc:	c8 2f       	mov	r28, r24
 1ce:	83 b1       	in	r24, 0x03	; 3
 1d0:	81 60       	ori	r24, 0x01	; 1
 1d2:	83 b9       	out	0x03, r24	; 3
 1d4:	84 e8       	ldi	r24, 0x84	; 132
 1d6:	86 bf       	out	0x36, r24	; 54
 1d8:	06 b6       	in	r0, 0x36	; 54
 1da:	07 fe       	sbrs	r0, 7
 1dc:	fd cf       	rjmp	.-6      	; 0x1d8 <lcd_dwr+0xe>
 1de:	83 b1       	in	r24, 0x03	; 3
 1e0:	8f 70       	andi	r24, 0x0F	; 15
 1e2:	83 b9       	out	0x03, r24	; 3
 1e4:	84 e8       	ldi	r24, 0x84	; 132
 1e6:	86 bf       	out	0x36, r24	; 54
 1e8:	06 b6       	in	r0, 0x36	; 54
 1ea:	07 fe       	sbrs	r0, 7
 1ec:	fd cf       	rjmp	.-6      	; 0x1e8 <lcd_dwr+0x1e>
 1ee:	83 b1       	in	r24, 0x03	; 3
 1f0:	9c 2f       	mov	r25, r28
 1f2:	90 7f       	andi	r25, 0xF0	; 240
 1f4:	89 2b       	or	r24, r25
 1f6:	83 b9       	out	0x03, r24	; 3
 1f8:	84 e8       	ldi	r24, 0x84	; 132
 1fa:	86 bf       	out	0x36, r24	; 54
 1fc:	06 b6       	in	r0, 0x36	; 54
 1fe:	07 fe       	sbrs	r0, 7
 200:	fd cf       	rjmp	.-6      	; 0x1fc <lcd_dwr+0x32>
 202:	0e 94 65 00 	call	0xca	; 0xca <toggle>
 206:	83 b1       	in	r24, 0x03	; 3
 208:	8f 70       	andi	r24, 0x0F	; 15
 20a:	83 b9       	out	0x03, r24	; 3
 20c:	84 e8       	ldi	r24, 0x84	; 132
 20e:	86 bf       	out	0x36, r24	; 54
 210:	06 b6       	in	r0, 0x36	; 54
 212:	07 fe       	sbrs	r0, 7
 214:	fd cf       	rjmp	.-6      	; 0x210 <lcd_dwr+0x46>
 216:	23 b1       	in	r18, 0x03	; 3
 218:	30 e1       	ldi	r19, 0x10	; 16
 21a:	c3 9f       	mul	r28, r19
 21c:	c0 01       	movw	r24, r0
 21e:	11 24       	eor	r1, r1
 220:	82 2b       	or	r24, r18
 222:	83 b9       	out	0x03, r24	; 3
 224:	84 e8       	ldi	r24, 0x84	; 132
 226:	86 bf       	out	0x36, r24	; 54
 228:	06 b6       	in	r0, 0x36	; 54
 22a:	07 fe       	sbrs	r0, 7
 22c:	fd cf       	rjmp	.-6      	; 0x228 <lcd_dwr+0x5e>
 22e:	0e 94 65 00 	call	0xca	; 0xca <toggle>
 232:	cf 91       	pop	r28
 234:	08 95       	ret

00000236 <lcd_msg>:
 236:	cf 93       	push	r28
 238:	df 93       	push	r29
 23a:	ec 01       	movw	r28, r24
 23c:	03 c0       	rjmp	.+6      	; 0x244 <lcd_msg+0xe>
 23e:	21 96       	adiw	r28, 0x01	; 1
 240:	0e 94 e5 00 	call	0x1ca	; 0x1ca <lcd_dwr>
 244:	88 81       	ld	r24, Y
 246:	81 11       	cpse	r24, r1
 248:	fa cf       	rjmp	.-12     	; 0x23e <lcd_msg+0x8>
 24a:	df 91       	pop	r29
 24c:	cf 91       	pop	r28
 24e:	08 95       	ret

00000250 <main>:
#include "LCD_I2C.h"


int main(void)
{
	DDRA = 0xff;
 250:	8f ef       	ldi	r24, 0xFF	; 255
 252:	8a bb       	out	0x1a, r24	; 26
    i2c_init();
 254:	0e 94 41 00 	call	0x82	; 0x82 <i2c_init>
	i2c_start();
 258:	0e 94 47 00 	call	0x8e	; 0x8e <i2c_start>
	i2c_write(0x70);
 25c:	80 e7       	ldi	r24, 0x70	; 112
 25e:	0e 94 4d 00 	call	0x9a	; 0x9a <i2c_write>
	lcd_init();
 262:	0e 94 cc 00 	call	0x198	; 0x198 <lcd_init>
    while (1) 
    {
		lcd_cmd(0x80);
 266:	80 e8       	ldi	r24, 0x80	; 128
 268:	0e 94 96 00 	call	0x12c	; 0x12c <lcd_cmd>
		lcd_msg("Prueba para");
 26c:	80 e6       	ldi	r24, 0x60	; 96
 26e:	90 e0       	ldi	r25, 0x00	; 0
 270:	0e 94 1b 01 	call	0x236	; 0x236 <lcd_msg>
		lcd_cmd(0xC3);
 274:	83 ec       	ldi	r24, 0xC3	; 195
 276:	0e 94 96 00 	call	0x12c	; 0x12c <lcd_cmd>
		lcd_msg("I2C");
 27a:	8c e6       	ldi	r24, 0x6C	; 108
 27c:	90 e0       	ldi	r25, 0x00	; 0
 27e:	0e 94 1b 01 	call	0x236	; 0x236 <lcd_msg>
		PORTA = ~PORTA;
 282:	8b b3       	in	r24, 0x1b	; 27
 284:	80 95       	com	r24
 286:	8b bb       	out	0x1b, r24	; 27
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 288:	2f e7       	ldi	r18, 0x7F	; 127
 28a:	8a e1       	ldi	r24, 0x1A	; 26
 28c:	96 e0       	ldi	r25, 0x06	; 6
 28e:	21 50       	subi	r18, 0x01	; 1
 290:	80 40       	sbci	r24, 0x00	; 0
 292:	90 40       	sbci	r25, 0x00	; 0
 294:	e1 f7       	brne	.-8      	; 0x28e <main+0x3e>
 296:	00 c0       	rjmp	.+0      	; 0x298 <main+0x48>
 298:	00 00       	nop
 29a:	e5 cf       	rjmp	.-54     	; 0x266 <main+0x16>

0000029c <_exit>:
 29c:	f8 94       	cli

0000029e <__stop_program>:
 29e:	ff cf       	rjmp	.-2      	; 0x29e <__stop_program>
